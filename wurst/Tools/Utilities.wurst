package Utilities

import FancyTextTag

public function unit.stop() returns boolean
	return IssueImmediateOrder(this, "stop")
	
public function unit.isIdle() returns boolean
	return GetUnitCurrentOrder(this) == OrderId("none")

public function unit.isInvulnerable() returns boolean
	let customInvulId = 'Bvu2'
	return GetUnitAbilityLevel(this, 'Avul')>0 or GetUnitAbilityLevel(this, 'Bvul')>0 or GetUnitAbilityLevel(this, customInvulId)>0

public function unit.isStructure() returns boolean
	return IsUnitType(this, UNIT_TYPE_STRUCTURE)
	
public function unit.isFlying() returns boolean
	return IsUnitType(this, UNIT_TYPE_FLYING)
	
public function unit.isHero() returns boolean
	return IsUnitType(this, UNIT_TYPE_HERO)
	
public function unit.getMaxMana() returns real
	return GetUnitState(this, UNIT_STATE_MAX_MANA)
	
public function unit.slotIndexOfItemType(integer iid) returns integer
	var result = 0
	var any = false
	for i = 0 to bj_MAX_INVENTORY
		if GetItemTypeId(UnitItemInSlot(this, i)) == iid
			result = i
			any = true
	if not any
		return -1
	else
		return result
		
public function unit.hasItemOfType(int iid) returns boolean
	return this.slotIndexOfItemType(iid) >= 0

public function playersPlaying() returns integer
	var result = 0
	for i = 0 to 11
		let ss = players[i].getSlotState() 
		if ss == PLAYER_SLOT_STATE_PLAYING
			result++
	return result

public function goldLostMessage(integer amount, vec2 pos) returns FancyTextTag
	let goldColor = "|cffe8572c"
	let sizeStart = 40.0
	let sizeEnd = 12.0
	let tag = new FancyTextTag(vec3(pos.x, pos.y, 0), goldColor + "-" + amount.toString() + "|r", sizeStart, sizeEnd)
	return tag
	
public function goldMessage(integer amount, vec2 pos) returns FancyTextTag
	let goldColor = "|cffffcc00"
	let sizeStart = 30.0
	let sizeEnd = 12.0
	let tag = new FancyTextTag(vec3(pos.x, pos.y, 0), goldColor + "+" + amount.toString() + "|r", sizeStart, sizeEnd)
	return tag

public function giveGoldFancy(player who, integer amount, vec2 textPos)
		who.addGold(amount)
		goldMessage(amount, textPos)