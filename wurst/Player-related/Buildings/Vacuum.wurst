package Vacuum

import PlayerBuilding
import Coin

constant uid = 'h003'
constant uPeriod = 1 //It's going to be slow anyways
constant veloAtDist500PerUpdate = 75 * ANIMATION_PERIOD
constant velo = uPeriod * veloAtDist500PerUpdate * 500
constant heuristicCutoff = 2000.0
constant heightMin = 999999.0

/*
function abs(real n) returns real
	if n < 0
		return -n
	else
		return n

class Vacuum extends PlayerBuilding
	
	construct()
		super(uid)
		this.addUpdate(uPeriod, (Updateable updateable) -> begin
			for unit u in getUnits()
				Coin.forEach((Coin coin) -> begin
					if coin.getPos3d().z < heightMin
						let heuristic = abs(coin.getX() - u.getX()) + abs(coin.getY() - u.getY())
						if heuristic < heuristicCutoff
							//We'll use the heuristic instead of the distance formula for all calcs because it's faster and the result is similar
							let dif = velo / heuristic 
							let ang = coin.getPos().angleTo(u.getPos())
							if dif < heuristic
								coin.setPos(vec2(coin.getX() + dif*ang.cos(), coin.getY() + dif*ang.sin()))
							else
								coin.setPos(u.getPos())
				end)
		end)
		
init
	new Vacuum()*/